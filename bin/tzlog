#!/usr/bin/env perl
use Mojo::Base -strict;
use POSIX qw(mktime);
use Term::ANSIColor qw(colored);
use Time::Piece;
use Getopt::Long;

exit usage() if -t STDIN;

Getopt::Long::Configure(qw(bundling permute pass_through));
Getopt::Long::GetOptions(
  'c|colors' => \(my $colors = -t STDOUT),
  'd|debug'  => \(my $debug = 0),
);

my $now = localtime;
my $tz_offset = shift // exit usage();
$tz_offset *= 3600 if $tz_offset <= 12;
$tz_offset -= $now->tzoffset;

my $i = 0;
my %mon_lookup = map { (lc($_) => $i++) } Time::Piece::mon_list;
my $hms_re = qr/(?<hour>\d{2}):(?<min>\d{2}):?(?<sec>\d{2}|\b)/;
my $mon_re = join '|', keys %mon_lookup;
my $tz_re = qr/\+(?<tz>\d{4})\b/;

while (<STDIN>) {
  my $m;

  # 2022-02-02T10:26:02
  # 2022/01/28 01:06:32
  $m ||= s!(?<all>(?<year>\d{4}) \W (?<mon>\d+)\w* \W (?<mday>\d+) (T|\s+) $hms_re)!tztime(%+)!eix;

  # 02/Feb/2022:02:26:02 +0100
  $m ||= s!(?<all>(?<mday>\d+) \W+ (?<mon>$mon_re)\w* \W+ (?<year>\d{4}) \W+ $hms_re \s+ $tz_re)!tztime(%+)!eix;

  # Fri Jan 27 11:44
  $m ||= s!(?<all>(?:\b[MTWFS]\w{2}\s+)(?<mon>$mon_re)\w* \s+ (?<mday>\d+) \s+ $hms_re)!tztime(%+)!eix;

  # Jan 27 11:44:04
  $m ||= s!(?<all>(?<mon>$mon_re)\w* \s+ (?<mday>\d+) \s+ $hms_re)!tztime(%+)!eix;

  local $| = 1;
  print;
}

sub usage {
  print <<'HERE';

Usage:

  # Convert from localtime in input stream to Tokyo ISO 8601 timestamp
  cat /var/log/syslog | tzlog +9
  cat /var/log/syslog | tzlog +32400

  # Convert from localtime in input stream to New York ISO 8601 timestamp
  cat /var/log/syslog | tzlog -5
  cat /var/log/syslog | tzlog -18000

Options:

  -c, --colors  Add color to the timestamp
  -d, --debug   Also show he original timestamp

Supported timestamps

  Jan 27 11:44:04
  2022/01/28 01:06:32
  02/Feb/2022:02:26:02 +0100

HERE
}

sub tzoffset {
  my $tz = shift;
  my ($h, $m) = map { s!^0?!!r } $tz =~ m!(\d\d)(\d\d)!;
  return $h * 3600 + $m * 60;
}

sub tztime {
  my %t = @_;
  $t{year} //= $now->_year;
  $t{year} -= 1900 if $t{year} > 1900;

  $t{mon} = $now->_mon unless length $t{mon};
  $t{mon} = $mon_lookup{lc($t{mon})} // $t{mon};
  $t{mday} = $now->mday unless length $t{mday};
  $t{hour} = $now->hour unless length $t{hour};
  $t{min} = $now->min unless length $t{min};
  $t{sec} = $now->sec unless length $t{sec};

  my $time = mktime(@t{qw(sec min hour mday mon year)});
  $time -= tzoffset($t{tz}) if defined $t{tz};
  my $str = localtime($time + $tz_offset)->datetime;
  $str = sprintf '(%s) %s', $t{all}, $str if $debug;
  return $colors ? colored($str, 'bold green') : $str;
}
