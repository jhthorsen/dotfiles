#!/usr/bin/env perl
# $ cpanm Mojolicious Image::ExifTool
use Mojo::Base -strict, -signatures;

use Mojo::File qw(path);
use Image::ExifTool;
use Time::Piece;

my $dir   = shift @ARGV || die "Usage: DRY_RUN=1 $0 <dir>\n";
my $fmt   = '%04s-%02s-%02s-%02s%02s%02s';
my $ts_re = qr/^\d{4}-\d{2}-\d{2}/;
for my $file (path($dir)->list->each) {
  next if $file->basename =~ $ts_re;

  my $exif = Image::ExifTool->new;
  my $info = $exif->ExtractInfo($file->to_string) or do { warn "Could not extract Exif from $file\n"; next };
  my $date = ts_from_exif($exif);
  unless ($date) {
    warn "Could not get date from $file - fallback to mtime\n";
    $date = ts_from_mtime($file);
  }

  my $renamed = $file->dirname->child(join '.', $date, lc $file->extname);
  my $n       = 0;
  ++$n && ($renamed = $file->dirname->child(join '.', "${date}_${n}", lc $file->extname)) while -e $renamed;

  do { warn "File exists $renamed\n"; next } if -e $renamed;

  say qq(mv "$file" "$renamed");
  $file->move_to($renamed) unless $ENV{DRY_RUN};
}

sub ts_from_exif ($exif) {
  my $num_re = '(\d+)\D*';

  for my $k (qw(CreateDate DateTimeOriginal ModifyDate GPSDateTime)) {
    my $date = $exif->GetValue($k)                                     or next;
    $date =~ m!(\d{4}) [:-]+ $num_re $num_re $num_re $num_re $num_re!x or next;
    return $2 > 12 ? sprintf $fmt, $1, $3, $2, $4, $5, $6 : sprintf $fmt, $1, $2, $3, $4, $5, $6;
  }

  return undef;
}

sub ts_from_mtime ($file) {
  my $tp = Time::Piece->new($file->stat->mtime);
  return join '', $tp->ymd('-'), $tp->hour, $tp->minute, $tp->second;
}
