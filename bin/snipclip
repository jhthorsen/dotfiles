#!/bin/bash
OP="$1"

ensure_hostname_and_port() {
  [ -z "$SNIPCLIP_HOSTNAME" ] && SNIPCLIP_HOSTNAME="127.0.0.1";
  [ -z "$SNIPCLIP_PORT" ] && SNIPCLIP_PORT="38888";
}

has_command() {
  command -v "$1" >/dev/null || return 1;
  echo "$1" | grep -q "^x" && [ -z "$DISPLAY" ] && return 1;
  return 0;
}

clipboard_to_stdout() {
  if [ -n "$SSH_TTY" ];         then cat "$SNIPCLIP_FILE";
  elif has_command pbpaste;     then pbpaste;
  elif has_command xclip;       then xclip -selection clipboard -o;
  elif has_command xsel;        then xsel -o -b;
  elif [ -e "$SNIPCLIP_FILE" ]; then cat "$SNIPCLIP_FILE";
  fi
}

stdin_to_clipboard() {
  [ -n "$SNIPCLIP_FILE" ] && touch "$SNIPCLIP_FILE" && chmod 600 "$SNIPCLIP_FILE";
  cat - > "$SNIPCLIP_FILE.tmp";
  mv "$SNIPCLIP_FILE.tmp" "$SNIPCLIP_FILE";

  if [ -n "$SNIPCLIP_HOSTNAME" ]; then nc -N "$SNIPCLIP_HOSTNAME" $SNIPCLIP_PORT < "$SNIPCLIP_FILE";
  elif has_command pbcopy;        then pbcopy < "$SNIPCLIP_FILE";
  elif has_command xclip;         then xclip -selection clipboard < "$SNIPCLIP_FILE";
  elif has_command xsel;          then xsel -i -b < "$SNIPCLIP_FILE";
  fi
}

usage() {
  ensure_hostname_and_port;
  cat - <<HERE;

Snipclip is a clipboard manager that works across operating systems.
It will use pbcopy, pbpaste, xclip, xsel or $SNIPCLIP_FILE
as backend for copy/paste.

Usage:

  # Same computer
  cat | snipclip [-i] # Read from STDIN and write to clipboard
  snipclip [-o]       # Read from clipboard and write to STDOUT

  # Listen to clipboard on SNIPCLIP_HOSTNAME:SNIPCLIP_PORT
  snipclip -l         

  # Send clipboard to SNIPCLIP_HOSTNAME:SNIPCLIP_PORT
  cat - | SSH_TTY=1 snipclip -i
  cat - | SNIPCLIP_HOSTNAME=$SNIPCLIP_HOSTNAME SNIPCLIP_PORT=$SNIPCLIP_PORT snipclip -i

HERE
}

[ -z "$SNIPCLIP_FILE" ] && SNIPCLIP_FILE="$HOME/.snipclip";
[ -n "$SSH_TTY" ] && ensure_hostname_and_port;

if [ "$OP" = "-o" ]; then
  clipboard_to_stdout;
elif [ "$OP" = "-i" ] || [ ! -t 0 ]; then
  stdin_to_clipboard;
elif [ "$OP" = "--server" ] || [ "$OP" = "-l" ]; then
  ensure_hostname_and_port;
  while echo "[$(date +'%H:%M:%S')] Waiting for clipboard data on $SNIPCLIP_HOSTNAME:$SNIPCLIP_PORT"; do
    nc -l "$SNIPCLIP_HOSTNAME" "$SNIPCLIP_PORT" | SNIPCLIP_HOSTNAME="" stdin_to_clipboard;
  done
elif [ "$OP" = "--help" ] || [ "$OP" = "-h" ]; then
  usage;
else
  exit 1;
fi
