#!/bin/bash
OP="$1"
OP_ARG="$2"

CLIPBOARD_FILE="$HOME/.snipclip";

has_command() {
  command -v $1 >/dev/null || return 1;
  echo $1 | grep -q "^x" && [ -z "$DISPLAY" ] && return 1;
  return 0;
}

clipboard_to_stdout() {
  if [ -n "$SSH_TTY" ]; then
    cat $CLIPBOARD_FILE;
  elif has_command pbpaste; then
    pbpaste;
  elif has_command xclip; then
    xclip -selection clipboard -o;
  elif has_command xsel; then
    xsel -o -b;
  elif [ -e $CLIPBOARD_FILE ]; then
    cat $CLIPBOARD_FILE;
  fi
}

stdin_to_clipboard() {
  [ -n "$CLIPBOARD_FILE" ] && touch "$CLIPBOARD_FILE" && chmod 600 "$CLIPBOARD_FILE";
  cat - > "$CLIPBOARD_FILE.tmp";
  mv "$CLIPBOARD_FILE.tmp" "$CLIPBOARD_FILE";

  if [ -n "$SSH_TTY" ]; then
    :; # noop
  elif has_command pbcopy; then
    cat $CLIPBOARD_FILE | pbcopy;
  elif has_command xclip; then
    cat $CLIPBOARD_FILE | xclip -selection clipboard;
  elif has_command xsel; then
    cat $CLIPBOARD_FILE | xsel -i -b;
  fi
}

sync_from_remote_clipboard() {
  ssh $1 'cat $HOME/.snipclip' | stdin_to_clipboard;
}

sync_from_remote_clipboard_loop() {
  export REMOTE_HOST="$1";
  while ssh $REMOTE_HOST 'tail -n0 -F $HOME/.snipclip 2>&1 | head -n1'; do
    ssh $REMOTE_HOST 'cat $HOME/.snipclip' | stdin_to_clipboard;
  done
}

sync_to_remote_clipboard() {
  clipboard_to_stdout | ssh $1 'cat - > $HOME/.snipclip';
}

if [ "x$OP" = "x-i" -o "x$OP" = "x-in" ]; then
  [ -z "$OP_ARG" ] && stdin_to_clipboard || sync_from_remote_clipboard $OP_ARG;
elif [ "x$OP" = "x-o" -o "x$OP" = "x-out" ]; then
  [ -z "$OP_ARG" ] && clipboard_to_stdout || sync_to_remote_clipboard $OP_ARG;
elif [ "x$OP" = "x--loop" ]; then
  [ -z "$OP_ARG" ] && exit 1;
  sync_from_remote_clipboard_loop $OP_ARG;
elif [ ! -t 0 ]; then
  stdin_to_clipboard;
else
  NAME="$(basename $0)";
  cat - <<HERE;

$NAME is a clipboard manager that works across operating systems.
It will use one of the following "backends" for copy/paste:

  * pbcopy and pbpaste
  * xclip
  * xsel
  * $CLIPBOARD_FILE

Usage:

  $NAME -i               # Read from STDIN and write to clipboard
  $NAME -o               # Read from clipboard and write to STDOUT
  $NAME -i hostname      # Read remote clipboard from hostname
  $NAME -o hostname      # Write local clipboard to hostname
  $NAME --loop hostname  # Read remote clipboard from hostname in a loop

HERE
fi
