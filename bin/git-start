#!/bin/bash
set -e; # Exit on command error
DOTFILES_ROOT="$(dirname "$(dirname "$0")")";
AF="6";
PS5="> ";

getopt() {
  while [ -n "$*" ]; do case "$1" in
    -t|--template) shift; TEMPLATE="$1"; shift ;;
    --dry-run) shift; AF="7"; PS5="# " ;;
    *) [ -z "$PROJECT_NAME" ] && PROJECT_NAME="$1"; shift ;;
  esac done
}

git_commit_maybe() {
  git status --porcelain | grep -q "." || return 0;
  run git add .;
  run git commit -a -m "$1";
}

main() {
  [ -d ".git" ] || run git init --initial-branch="main" "$PROJECT_NAME_LC";
  [ -d "../$PROJECT_NAME_LC" ] || run cd "$PROJECT_NAME_LC";
  [ -f ".gitignore" ] || run touch .gitignore;
  run rsync -a --copy-unsafe-links --out-format='%iÂ %n%L' --ignore-existing --exclude="git-*.sh" "$TEMPLATE_DIR/" "./";
  git_commit_maybe "Add template files from github.com/jhthorsen/dotfiles.git/templates/$TEMPLATE";
  [ -x "$TEMPLATE_DIR/git-start.sh" ] && source "$TEMPLATE_DIR/git-start.sh";
  start_project;
  git_commit_maybe "Ran github.com/jhthorsen/dotfiles.git/templates/$TEMPLATE/git-start.sh";
}

run() {
  echo "$(tput setaf "$AF")$PS5$*$(tput sgr0)" >&2;
  [ "$PS5" = "# " ] || "$@";
}

setup() {
  [ -z "$PROJECT_NAME" ] && usage 0;
  [ -z "$TEMPLATE" ] && usage 0;
  echo "$PROJECT_NAME" | grep -qi '^[a-z]' || usage 1 "Not a valid project name: $PROJECT_NAME";
  PROJECT_NAME_LC="$(echo "$PROJECT_NAME" | tr "[:upper:]" "[:lower:]")";
  TEMPLATE_DIR="$DOTFILES_ROOT/templates/$TEMPLATE";
  [ -d "$TEMPLATE_DIR" ] || usage 20 "Not a directory: $TEMPLATE_DIR";
  return 0;
}

start_project() {
  echo "No such executable: $TEMPLATE_DIR/git-start.sh" 1>&1;
}

usage() {
  [ -z "$2" ] \
    && echo "Usage: git start [--dry-run] --template perl My-Project" \
    || echo "$(tput setaf 1)$2$(tput sgr0)";
  exit "$1";
}

getopt "$@" && setup && main;
