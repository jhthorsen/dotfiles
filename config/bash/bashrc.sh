#!/bin/bash
_alias() { echo "alias $1='$2';"; }
_export() { export "$1=$2"; echo "export $1=\"$2\";"; }
_run() { echo "$*;"; }
_source() { echo "source \"$1\";"; }

echo "# Generated by $0";

# Avoid showing the "Last login" message
touch "$HOME/.hushlogin";

# FUNCTIONS
echo "# bash_functions.sh start";
grep -v "^#" "$(dirname "${BASH_SOURCE[0]}")/bash_functions.sh";

echo "# end";

# ALIASES
_alias airport "/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport"
_alias cpanm "cpanm -M https://cpan.metacpan.org"
_alias grep "grep --color=auto --line-buffered";
_alias gti "git";
_alias ll "eza --color=auto --time-style=long-iso --group-directories-first --classify";
_alias la "eza --color=auto --time-style=long-iso --group-directories-first --long --all";
_alias lt "eza --icons=auto --color=always --time-style=long-iso --long --no-quotes --sort time";
_alias l "eza --icons=auto --color=always --time-style=long-iso --long --no-quotes";
_alias pass "stty sane && PASSWORD_STORE_ENABLE_EXTENSIONS=true pass"
_alias pcover "perl Makefile.PL; cover -ignore_re="t/.*" -prefer_lib -test; make clean"
_alias psme "ps axfu | grep "$USER"";
_alias sort "LC_ALL=C sort";
_alias weather "curl https://wttr.in/"

command -v rg >/dev/null && _alias ack rg;

# EXPORTS
HOMEBREW_PREFIX="$(/opt/homebrew/bin/brew --prefix 2>/dev/null)";
[ -n "$HOMEBREW_PREFIX" ] && _export HOMEBREW_PREFIX "$HOMEBREW_PREFIX";

_export ANSIBLE_NOCOWS "1";
_export AUTO_REMOVE_SLASH "0";
_export CDPATH ":$HOME/git:$HOME/git/_alien:$HOME/git/_old:$HOME/Nextcloud";
_export DOTFILES_HOME "$(dirname "$(dirname "$(dirname "$(readlink -f "$0")")")")";
_export EDITOR "nvim";
_export FZF_DEFAULT_COMMAND "fd --type f";
_export FZF_DEFAULT_OPTS "--height 10 --reverse";
_export HISTSIZE "10000";
_export LANG "en_US.UTF-8";
_export LESS "XFR";
_export LS_COLORS "";
_export NVIM_TERMINAL_SHELL "tmac";
_export SSLMAKER_HOME "/opt/homebrew/etc/sslmaker";
_export TT_HOURS_PER_MONTH "150";

# PATH
command -v xcode-select >/dev/null && PATH="$(xcode-select --print-path)/usr/bin:$PATH";
[ -n "$HOMEBREW_PREFIX" ] && PATH="$HOMEBREW_PREFIX/opt/gettext/bin:$PATH";
[ -n "$HOMEBREW_PREFIX" ] && PATH="$HOMEBREW_PREFIX/opt/ncurses/bin:$PATH";
[ -n "$HOMEBREW_PREFIX" ] && PATH="$HOMEBREW_PREFIX/opt/openssl/bin:$PATH";
[ -n "$HOMEBREW_PREFIX" ] && PATH="$HOMEBREW_PREFIX/opt/sqlite/bin:$PATH";
[ -n "$HOMEBREW_PREFIX" ] && PATH="$HOMEBREW_PREFIX/opt/go/libexec/bin:$PATH";
[ -n "$HOMEBREW_PREFIX" ] && PATH="$HOMEBREW_PREFIX/opt/python/libexec/bin:$PATH";
[ -n "$HOMEBREW_PREFIX" ] && PATH="$HOMEBREW_PREFIX/opt/ruby/bin:$PATH";
[ -n "$HOMEBREW_PREFIX" ] && PATH="$HOMEBREW_PREFIX/lib/ruby/gems/3.3.0/bin:$PATH";
[ -n "$HOMEBREW_PREFIX" ] && PATH="$HOMEBREW_PREFIX/opt/perl/bin:$PATH";
[ -n "$HOMEBREW_PREFIX" ] && PATH="$HOMEBREW_PREFIX/bin:$PATH";
[ -n "$HOMEBREW_PREFIX" ] && PATH="$HOMEBREW_PREFIX/sbin:$PATH";
[ -d "$HOME/.cargo/bin" ] && PATH="$HOME/.cargo/bin:$PATH";
[ -d "$HOME/.atuin/bin" ] && PATH="$HOME/.atuin/bin:$PATH";
[ -d "$HOME/.local/bin" ] && PATH="$HOME/.local/bin:$PATH";

PATH="$DOTFILES_HOME/bin:$PATH";
PATH="$(perl -e 'print join ":",grep{!$u{$_}++&&-e&&length}split ":",$ENV{PATH}')";
_export PATH "$PATH";

# AUTOCOMPLETE
[ -e "/etc/profile.d/bash_completion.sh" ] && _source "/etc/profile.d/bash_completion.sh";
[ -e "/opt/homebrew/etc/profile.d/bash_completion.sh" ] && _source "/opt/homebrew/etc/profile.d/bash_completion.sh";
[ -d "$HOME/.config/shell" ] || mkdir -p "$HOME/.config/shell";

if command -v atuin >/dev/null; then
  _run 'eval "$(atuin init bash --disable-up-arrow)"';
else
  [ -r "$HOME/.config/shell/fzf-key-bindings.bash" ] \
    || curl -Ls "https://github.com/junegunn/fzf/raw/master/shell/key-bindings.bash" > "$HOME/.config/shell/fzf-key-bindings.bash";
  [ -r "$HOME/.config/shell/fzf-completion.bash" ] \
    || curl -Ls "https://github.com/junegunn/fzf/raw/master/shell/completion.bash" > "$HOME/.config/shell/fzf-completion.bash";
  _source "$HOME/.config/shell/fzf-completion.bash";
  _source "$HOME/.config/shell/fzf-key-bindings.bash";
fi

# SETTINGS
_run "complete -F __git_wrap__git_main gti";
_run "bind -m vi-command '\"\C-l\": clear-screen'";
_run "bind -m vi-insert  '\"\C-l\": clear-screen'";
_run "bind -m vi-insert  '\"\C-a\": beginning-of-line'";
_run "bind -m vi-insert  '\"\C-e\": end-of-line'";
_run "shopt -s histappend";
_run "shopt -s progcomp";
_run "shopt -s progcomp_alias";
_run "set -o vi";
_run "stty -echoctl";

# GPG
if command -v gpgconf >/dev/null; then
  _export GPG_TTY '$(tty)';
  _export SSH_AUTH_SOCK "$(gpgconf --list-dirs agent-ssh-socket)";
  _run "(&>/dev/null gpgconf --launch gpg-agent &)";
fi

# BASH EXTENSION
[ -f "/opt/homebrew/etc/profile.d/bash-preexec.sh" ] \
  && _source "/opt/homebrew/etc/profile.d/bash-preexec.sh";

# PROMPT
command -v starship >/dev/null && _run 'eval "$(starship init bash)"';
echo "__user_starship_precmd() { history -a; }";
_run "starship_precmd_user_func=__user_starship_precmd";

# OVERRIDES
[ -e "$HOME/.bash_profile_local" ] && _source "$HOME/.bash_profile_local";
